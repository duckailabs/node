{"version":3,"file":"demo-iterm.js","sourceRoot":"","sources":["demo-iterm.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACrC,OAAO,EAAE,SAAS,EAAE,MAAM,MAAM,CAAC;AAEjC,MAAM,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;AAElC,KAAK,UAAU,OAAO;IACpB,IAAI,CAAC;QACH,MAAM,GAAG,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC;QAE1B,MAAM,QAAQ,GAAG;YACf,6CAA6C;YAC7C;;;;;;6BAMuB,GAAG;;;;;+BAKD,GAAG;;;;;;+BAMH,GAAG;;;kBAGhB;SACb,CAAC;QAEF,gCAAgC;QAChC,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;YAC3B,MAAM,SAAS,CAAC,GAAG,CAAC,CAAC;YACrB,4CAA4C;YAC5C,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;QAC1D,CAAC;IAEH,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACH,CAAC;AAED,OAAO,EAAE,CAAC","sourcesContent":["import { exec } from 'child_process';\nimport { promisify } from 'util';\n\nconst execAsync = promisify(exec);\n\nasync function runDemo() {\n  try {\n    const cwd = process.cwd();\n    \n    const commands = [\n      // Create new window with specific dimensions\n      `osascript -e '\n        tell application \"iTerm2\"\n          create window with default profile\n          tell current session of current window\n            set columns to 120\n            set rows to 30\n            write text \"cd ${cwd} && AGENT_NAME=ducky P2P_PORT=8000 tsx ./scripts/chat-client.ts\"\n            \n            -- Split vertically for Soulie\n            split vertically with default profile\n            tell second session\n              write text \"cd ${cwd} && AGENT_NAME=soulie P2P_PORT=8002 tsx ./scripts/chat-client.ts\"\n            end tell\n            \n            -- Split vertically again for Glu\n            split vertically with default profile\n            tell third session\n              write text \"cd ${cwd} && AGENT_NAME=glu P2P_PORT=8004 tsx ./scripts/chat-client.ts\"\n            end tell\n          end tell\n        end tell'`\n    ];\n\n    // Execute commands sequentially\n    for (const cmd of commands) {\n      await execAsync(cmd);\n      // Give more time for the processes to start\n      await new Promise(resolve => setTimeout(resolve, 2000));\n    }\n    \n  } catch (error) {\n    console.error('Failed to start demo:', error);\n    process.exit(1);\n  }\n}\n\nrunDemo(); "]}