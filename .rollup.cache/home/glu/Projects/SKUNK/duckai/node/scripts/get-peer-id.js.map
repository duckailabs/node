{"version":3,"file":"get-peer-id.js","sourceRoot":"","sources":["get-peer-id.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAC7D,OAAO,MAAM,MAAM,QAAQ,CAAC;AAC5B,OAAO,EAAE,QAAQ,IAAI,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAEvE,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,KAAK,UAAU,SAAS,CAAC,UAAkB;IACzC,wCAAwC;IACxC,MAAM,QAAQ,GAAG,IAAI,UAAU,CAC7B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CACjD,CAAC;IAEF,mCAAmC;IACnC,MAAM,MAAM,GAAG,MAAM,kBAAkB,CAAC,QAAQ,CAAC,CAAC;IAElD,gCAAgC;IAChC,MAAM,YAAY,GAAG,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,WAAW,CAAC,CAAC;IAEvE,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,KAAK,UAAU,IAAI;IACjB,iCAAiC;IACjC,MAAM,WAAW,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,iBAAiB,IAAI,EAAE,CAAC,CAAC;IACzE,MAAM,SAAS,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,IAAI,EAAE,CAAC,CAAC;IAErE,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC;IAC3C,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;IAEvC,wBAAwB;IACxB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC;IAClC,OAAO,CAAC,GAAG,CAAC,mDAAmD,WAAW,wBAAwB,CAAC,CAAC;IACpG,OAAO,CAAC,GAAG,CAAC,mDAAmD,SAAS,wBAAwB,CAAC,CAAC;AACpG,CAAC;AAED,IAAI,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC","sourcesContent":["import { createFromProtobuf } from '@libp2p/peer-id-factory';\nimport dotenv from 'dotenv';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n\ndotenv.config();\n\nasync function getPeerId(privateKey: string) {\n  // Convert hex private key to Uint8Array\n  const keyBytes = new Uint8Array(\n    Buffer.from(privateKey.replace('0x', ''), 'hex')\n  );\n  \n  // Create peer ID using Ed25519 key\n  const peerId = await createFromProtobuf(keyBytes);\n  \n  // Get the string representation\n  const peerIdString = uint8ArrayToString(peerId.toBytes(), 'base58btc');\n  \n  return peerIdString;\n}\n\nasync function main() {\n  // Get peer IDs for ducky and glu\n  const duckyPeerId = await getPeerId(process.env.DUCKY_PRIVATE_KEY || '');\n  const gluPeerId = await getPeerId(process.env.GLU_PRIVATE_KEY || '');\n\n  console.log('Ducky Peer ID:', duckyPeerId);\n  console.log('Glu Peer ID:', gluPeerId);\n\n  // Print full multiaddrs\n  console.log('\\nBootstrap Nodes:');\n  console.log(`'/dns4/us-east.hosting.openpond.ai/tcp/8000/p2p/${duckyPeerId}',  // Ducky (US East)`);\n  console.log(`'/dns4/us-west.hosting.openpond.ai/tcp/8000/p2p/${gluPeerId}',    // Glu (US West)`);\n}\n\nmain().catch(console.error); "]}